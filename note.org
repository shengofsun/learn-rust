* 语法形式的不统一：
** 如果if-else是expression，那么if-else在结束之后为什么不用";"
** match的各个pattern的间隔用的是",", 非常奇怪的语法

* reference的疑惑
** 在destructure的时候, 获取到的值会不会引发所有权的移动

* 传递匿名函数作为参数：
** FnOnce: 闭包以值的方式拥有环境变量；因为rust只能有一个变量拥有生命周期，所以意味着这个函数只能调用一次
** FnMut: 闭包以可变引用的方式拥有环境变量

* 其他感想
** rust并没有通过降低开发语言的复杂性来增加开发效率；而是通过更为精细的生命周期管理，给了编译器更多做编译期检查的可能性，从而
   降低了程序员在脑子不清醒的时候写代码的可能性。

